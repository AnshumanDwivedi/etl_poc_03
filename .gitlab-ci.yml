image: maven:3.6-jdk-8

stages:
  - build
  - test
  - deploy

variables:
  MAVEN_CLI_OPTS: "--batch-mode"
  SPARK_VER: "2.2.1"
  SPARK_COMPAT_VER: "2.2"

cache:
  paths:
    - target/

build:
  stage: build
  script:
    - mvn clean $MAVEN_CLI_OPTS compile
  except:
    changes:
      - "*.md"

test:
  stage: test
  dependencies:
    - build
  script:
    - export JAVA_TOOL_OPTIONS="-Xmx1024m -Xms1024m"  # solve jvm heap size problem
    - mvn $MAVEN_CLI_OPTS test

deploy:snapshot:
  stage: deploy
  script:
    - mvn -DskipTests -Pprovided $MAVEN_CLI_OPTS deploy
  dependencies:
    - test
  only:
    - master

deploy:release:
  stage: deploy
  script:
    - mvn -Dchangelist= -DskipTests -Pprovided $MAVEN_CLI_OPTS deploy
  dependencies:
    - test
  only:
    - master
  when: manual
  
deploy:snapshot-compat:
  stage: deploy
  script:
    - mvn -DskipTests -Pprovided $MAVEN_CLI_OPTS -Dspark.version=$SPARK_VER -Dspark.compat.version=$SPARK_COMPAT_VER deploy
  dependencies:
    - test
  only:
    - master
  when: manual

deploy:release-compat:
  stage: deploy
  script:
    - mvn -Dchangelist= -DskipTests -Pprovided $MAVEN_CLI_OPTS -Dspark.version=$SPARK_VER -Dspark.compat.version=$SPARK_COMPAT_VER deploy
  dependencies:
    - test
  only:
    - master
  when: manual