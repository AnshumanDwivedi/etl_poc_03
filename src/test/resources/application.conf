test {
  excel {
    storage = "EXCEL"
    path = "src/test/resources/test_config_excel.xlsx"
    useHeader = "true"
    treatEmptyValuesAsNulls = "true"
    inferSchema = "false"
    schema = "partition1 INT, partition2 STRING, clustering1 STRING, value LONG"
    saveMode = "Overwrite"
  }

  cassandra {
    storage = "CASSANDRA"
    keyspace = "test_space"
    table = "test_spark_connector2"
    partitionKeyColumns = ["partition1", "partition2"]
    clusteringKeyColumns = ["clustering1"]
  }

  parquet {
    storage = "PARQUET"
    path = "file:///Users/qin/IdeaProjects/dc-spark-sdk/src/test/resources/test_config_parquet"  // must be absolute path
    table = "test_config"
    saveMode = "Append"
  }

  csv {
    storage = "CSV"
    path = "src/test/resources/test_config_csv"
    inferSchema = "true"
    delimiter = ";"
    header = "true"
    saveMode = "Append"
  }

  json {
    storage = "JSON"
    path = "src/test/resources/test_config_json"
    saveMode = "Append"
  }
}

connector {
  excel {
    storage = "EXCEL"
    path = "src/test/resources/test_config_excel2.xlsx"
    useHeader = "true"
    treatEmptyValuesAsNulls = "true"
    inferSchema = "false"
    schema = "partition1 INT, partition2 STRING, clustering1 STRING, value LONG"
    saveMode = "Overwrite"
  }

  cassandra {
    storage = "CASSANDRA"
    keyspace = "test_space"
    table = "test_spark_connector3"
    partitionKeyColumns = ["partition1", "partition2"]
    clusteringKeyColumns = ["clustering1"]
  }

  parquet {
    storage = "PARQUET"
    path = "file:///Users/qin/IdeaProjects/dc-spark-sdk/src/test/resources/test_config_parquet2"  // must be absolute path
    table = "test_config2"
    saveMode = "Append"
  }

  csv {
    storage = "CSV"
    path = "src/test/resources/test_config_csv2"
    inferSchema = "true"
    delimiter = ";"
    header = "true"
    saveMode = "Append"
  }

  dynamo {
    storage = "DYNAMODB"
    region = "eu-west-1"
    table = "sensors-dev-networks"
    saveMode = "Overwrite"
  }
}

connectorBuilder {
  excel {
    storage = "EXCEL"
    path = "src/test/resources/test_config_excel3.xlsx"
    useHeader = "true"
    treatEmptyValuesAsNulls = "true"
    inferSchema = "false"
    schema = "partition1 INT, partition2 STRING, clustering1 STRING, value LONG"
    saveMode = "Overwrite"
  }

  cassandra {
    storage = "CASSANDRA"
    keyspace = "test_space"
    table = "test_spark_connector4"
    partitionKeyColumns = ["partition1", "partition2"]
    clusteringKeyColumns = ["clustering1"]
  }

  parquet {
    storage = "PARQUET"
    path = "file:///Users/qin/IdeaProjects/dc-spark-sdk/src/test/resources/test_config_parquet3"  // must be absolute path
    table = "test_config3"
    saveMode = "Append"
  }

  csv {
    storage = "CSV"
    path = "src/test/resources/test_config_csv3"
    inferSchema = "true"
    delimiter = ";"
    header = "true"
    saveMode = "Append"
  }

  wrong_csv {
    storage = "BLABLA"
    path = "src/test/resources/test_config_csv3"
    inferSchema = "true"
    delimiter = ";"
    header = "true"
    saveMode = "Append"
  }

  wrong_csv2 {
    storage = "OTHER"
    path = "src/test/resources/test_config_csv3"
    inferSchema = "true"
    delimiter = ";"
    header = "true"
    saveMode = "Append"
  }
}

repoBuilder {
  excel {
    storage = "EXCEL"
    path = "src/test/resources/test_config_excel4.xlsx"
    useHeader = "true"
    treatEmptyValuesAsNulls = "true"
    inferSchema = "false"
    schema = "partition1 INT, partition2 STRING, clustering1 STRING, value LONG"
    saveMode = "Overwrite"
  }

  cassandra {
    storage = "CASSANDRA"
    keyspace = "test_space"
    table = "test_spark_connector5"
    partitionKeyColumns = ["partition1", "partition2"]
    clusteringKeyColumns = ["clustering1"]
  }

  parquet {
    storage = "PARQUET"
    path = "file:///Users/qin/IdeaProjects/dc-spark-sdk/src/test/resources/test_config_parquet4"  // must be absolute path
    table = "test_config4"
    saveMode = "Append"
  }

  csv {
    storage = "CSV"
    path = "src/test/resources/test_config_csv4"
    inferSchema = "true"
    delimiter = ";"
    header = "true"
    saveMode = "Append"
  }
}